Problem Solving

1) Arrays 

https://practice.geeksforgeeks.org/problems/count-pairs-with-given-sum5022/1 

Question - Given an array of N integers, and an integer K, find the number of pairs of elements in the array whose sum is equal to K.


Solution - 

//{ Driver Code Starts
//Initial Template for Java

import java.io.*;
import java.util.*;

public class GFG {

    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int tc = Integer.parseInt(br.readLine().trim());
        while (tc-- > 0) {
            String[] inputLine;
            inputLine = br.readLine().trim().split(" ");
            int n = Integer.parseInt(inputLine[0]);
            int k = Integer.parseInt(inputLine[1]);
            int[] arr = new int[n];
            inputLine = br.readLine().trim().split(" ");
            for (int i = 0; i < n; i++) {
                arr[i] = Integer.parseInt(inputLine[i]);
            }
            int ans = new Solution().getPairsCount(arr, n, k);
            System.out.println(ans);
        }
    }
}

// } Driver Code Ends


//User function Template for Java

class Solution {
    int getPairsCount(int[] arr, int n, int k) {
        // code here
        int count[] = new int[k+1];
        for(int i=0;i<=k;i++){
            count[i]=0;
        }
        
        for(int i=0;i<n;i++){
            if(arr[i]<=k ){
                count[arr[i]]+=1;
            }
        }
        
        int pair = 0;
        int num=0;
        for(int i=0;i<=k/2;i++){
            if(count[i]>0 && count[k-i]>0){
                // num = Math.max(count[i], count[k-i]);
                // System.out.println(i+"  "+count[i]+" "+count[k-i]+" "+(k-i));
                // num--;
                // pair+=(num*(num+1)/2);
                if(k-i==i){
                    num = count[i];
                    pair+=(num*(num-1)/2);
                }else{
                    pair+=(count[i]*count[k-i]);
                }
            }
        }
        return pair;
    }
}


2) Matrix

https://practice.geeksforgeeks.org/problems/row-with-max-1s0023/1 

Question - 
Given a boolean 2D array of n x m dimensions where each row is sorted. Find the 0-based index of the first row that has the maximum number of 1's.

Solution - 

#User function Template for python3
class Solution:

    def rowWithMax1s(self,arr, n, m):
        # code here
    
        id=-1
        max_cnt=0
        for i in range(n):
            j=m-max_cnt-1
            while(j>=0 and arr[i][j]==1):
                j-=1
            if(max_cnt<m-j-1):
                max_cnt=m-j-1
                id=i
        return id



3) String -  Longest Repeating Subsequence

https://practice.geeksforgeeks.org/problems/longest-repeating-subsequence2004/1 


Given string str, find the length of the longest repeating subsequence such that it can be found twice in the given string.

The two identified subsequences A and B can use the same ith character from string str if and only if that ith character has different indices in A and B. For example, A = "xax" and B = "xax" then the index of first "x" must be different in the original string for A and B.

class Solution
{
    public int LongestRepeatingSubsequence(String str)
    {
        // code here
        int n=str.length();
        int [][] dp=new int[n+1][n+1];
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=n;j++)
            {
                if(str.charAt(i-1)==str.charAt(j-1) && i!=j)
                {
                    dp[i][j]=dp[i-1][j-1]+1;
                }
                else
                {
                    dp[i][j]=Math.max(dp[i-1][j], dp[i][j-1]);
                }
            }
        }
        
        return dp[n][n];
    }
}