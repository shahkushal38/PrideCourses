Introduction to Matrix

A matrix represents a collection of numbers arranged in order of rows and columns. It is necessary to enclose the elements of a matrix in parentheses or brackets.

Order of a Matrix : The order of a matrix is defined in terms of its number of rows and columns.

Transpose of a Matrix: The transpose [M]^T of an m x n matrix [M] is the n x m matrix obtained by interchanging the rows and columns of [M].


Properties of Matrix addition and multiplication:
 
A+B = B+A (Commutative)
(A+B)+C = A+ (B+C) (Associative)
AB ≠ BA (Not Commutative)
(AB) C = A (BC) (Associative)
A (B+C) = AB+AC (Distributive)

Terminologies


Square Matrix: A square Matrix has as many rows as it has columns. i.e. no of rows = no of columns.

Symmetric matrix: A square matrix is said to be symmetric if the transpose of original matrix is equal to its original matrix. i.e. (AT) = A.

Skew-symmetric: A skew-symmetric (or antisymmetric or antimetric[1]) matrix is a square matrix whose transpose equals its negative.i.e. (AT) = -A.

Diagonal Matrix:A diagonal matrix is a matrix in which the entries outside the main diagonal are all zero. The term usually refers to square matrices.

Identity Matrix:A square matrix in which all the elements of the principal diagonal are ones and all other elements are zeros.Identity matrix is denoted as I.

Orthogonal Matrix: A matrix is said to be orthogonal if AAT = ATA = I.

Idemponent Matrix: A matrix is said to be idemponent if A2 = A.

Involutary Matrix: A matrix is said to be Involutary if A2 = I.

Singular Matrix: A square matrix is said to be singular matrix if its determinant is zero i.e. |A|=0

Nonsingular Matrix: A square matrix is said to be non-singular matrix if its determinant is non-zero.


Note: Every Square Matrix can uniquely be expressed as the sum of a symmetrix matrix and skew symmetric matrix. A = 1/2 (AT + A) + 1/2 (A - AT).


Trace of a matrix: trace of a matrix is denoted as tr(A) which is used only for square matrix and equals the sum of the diagonal elements of the matrix. For example:

Matrix Implementation - Matrix in programming languages can be implemented using 2-D arrays. 2-D arrays or Two-Dimensional arrays in simple words can be defined as an array of arrays.

data_type  array_name[size1][size2]

Where,
data_type: Type of data to be stored in the array. 
           Here data_type is valid C/C++ data type
array_name: Name of the array
size1: Number of rows
size2: Number of columns

Example:
int arr[2][5];


Matrix Operations  - multiplication, addition, Subtraction, Division

Key points:
 
Multiplication of matrices is always non-commutative which means A*B ≠ B*A
Multiplication of matrices is associative which means A*(B*C) = (A*B)*C
For computing A*B, the number of columns in A must be equal to number of rows in B
Existence of A*B does not imply existence of B*A
The complexity of multiplication operation (A*B) is O(m*n*p) where m*n and n*p are order of A and B respectively
The order of matrix C computed as A*B is O(m*p) where m*n and n*p are order of A and B respectively

Questions  - 

1) Spirally traversing a matrix - https://practice.geeksforgeeks.org/problems/spirally-traversing-a-matrix-1587115621/1
2) Row with Max 1's - https://practice.geeksforgeeks.org/problems/row-with-max-1s0023/1
3) Rotate a matrix by 90 degree - https://www.geeksforgeeks.org/rotate-a-matrix-by-90-degree-in-clockwise-direction-without-using-any-extra-space/.



For ArrayList Refer code - https://www.geeksforgeeks.org/arraylist-in-java/
